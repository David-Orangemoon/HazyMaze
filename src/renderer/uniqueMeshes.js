(function() {
    HazyMaze.meshes = {};
    
    HazyMaze.parseOBJ = (OBJ) => {
        let pointCount = 0;

        let points = {
            a_position: [],
            a_normal: [],
            a_texcoord: []
        };

        const json = {
            a_position: [],
            a_normal: [],
            a_texcoord: [],
        }

        OBJ.split("\n").forEach(element => {
            const line = element.trim().split(" ");

            switch (line[0]) {
                case "v": points.a_position.push([Number(line[1]), Number(line[2]), Number(line[3])]); break;
                case "vn": points.a_normal.push([Number(line[1]), Number(line[2]), Number(line[3])]); break;
                case "vt": points.a_texcoord.push([Number(line[1]), Number(line[2])]); break;

                case "f":
                    const verts = [
                        line[1].split("/"),
                        line[2].split("/"),
                        line[3].split("/"),
                    ];

                    json.a_position.push(points.a_position[Number(verts[1][0]) - 1], points.a_position[Number(verts[0][0]) - 1], points.a_position[Number(verts[2][0]) - 1]);
                    json.a_texcoord.push(points.a_texcoord[Number(verts[1][1]) - 1], points.a_texcoord[Number(verts[0][1]) - 1], points.a_texcoord[Number(verts[2][1]) - 1]);
                    json.a_normal.push(points.a_normal[Number(verts[1][2]) - 1], points.a_normal[Number(verts[0][2]) - 1], points.a_normal[Number(verts[2][2]) - 1]);
                    
                    pointCount += 3;
                    break;
            
                default:
                    break;
            }
        });

        json.a_position = new Float32Array(json.a_position.flat(2));
        json.a_texcoord = new Float32Array(json.a_texcoord.flat(2));
        json.a_normal = new Float32Array(json.a_normal.flat(2));

        //Build final result
        return { mesh: HazyMaze.daveShade.buffersFromJSON(json), pointCount: pointCount};
    }

    HazyMaze.meshes.cone = HazyMaze.parseOBJ(`# Blender 4.5.2 LTS
    # www.blender.org
    mtllib cone.mtl
    o Cone
    v 0.000000 -0.200000 -0.250000
    v 0.216506 -0.200000 0.125000
    v -0.216506 -0.200000 0.125000
    v 0.000000 0.200000 0.000000
    vn 0.8266 0.2983 -0.4772
    vn -0.0000 -1.0000 -0.0000
    vn -0.0000 0.2983 0.9545
    vn -0.8266 0.2983 -0.4772
    vt 0.250000 0.490000
    vt 0.250000 0.250000
    vt 0.457846 0.130000
    vt 0.750000 0.490000
    vt 0.957846 0.130000
    vt 0.542154 0.130000
    vt 0.042154 0.130000
    s 0
    f 1/1/1 4/2/1 2/3/1
    f 1/4/2 2/5/2 3/6/2
    f 2/3/3 4/2/3 3/7/3
    f 3/7/4 4/2/4 1/1/4`);

    HazyMaze.meshes.sphere = HazyMaze.parseOBJ(`# Blender 4.5.2 LTS
    # www.blender.org
    mtllib sphere.mtl
    o Icosphere
    v 0.000000 -0.250000 -0.000000
    v 0.180900 -0.111804 0.131430
    v -0.069096 -0.111804 0.212660
    v -0.223606 -0.111804 -0.000000
    v -0.069096 -0.111804 -0.212660
    v 0.180900 -0.111804 -0.131430
    v 0.069096 0.111804 0.212660
    v -0.180900 0.111804 0.131430
    v -0.180900 0.111804 -0.131430
    v 0.069096 0.111804 -0.212660
    v 0.223606 0.111804 -0.000000
    v 0.000000 0.250000 -0.000000
    vn 0.1876 -0.7947 0.5774
    vn 0.6071 -0.7947 -0.0000
    vn -0.4911 -0.7947 0.3568
    vn -0.4911 -0.7947 -0.3568
    vn 0.1876 -0.7947 -0.5774
    vn 0.9822 -0.1876 -0.0000
    vn 0.3035 -0.1876 0.9342
    vn -0.7946 -0.1876 0.5774
    vn -0.7946 -0.1876 -0.5774
    vn 0.3035 -0.1876 -0.9342
    vn 0.7946 0.1876 0.5774
    vn -0.3035 0.1876 0.9342
    vn -0.9822 0.1876 -0.0000
    vn -0.3035 0.1876 -0.9342
    vn 0.7946 0.1876 -0.5774
    vn 0.4911 0.7947 0.3568
    vn -0.1876 0.7947 0.5774
    vn -0.6071 0.7947 -0.0000
    vn -0.1876 0.7947 -0.5774
    vn 0.4911 0.7947 -0.3568
    vt 0.181819 0.000000
    vt 0.272728 0.157461
    vt 0.090910 0.157461
    vt 0.363637 0.000000
    vt 0.454546 0.157461
    vt 0.909091 0.000000
    vt 1.000000 0.157461
    vt 0.818182 0.157461
    vt 0.727273 0.000000
    vt 0.636364 0.157461
    vt 0.545455 0.000000
    vt 0.363637 0.314921
    vt 0.181819 0.314921
    vt 0.909091 0.314921
    vt 0.727273 0.314921
    vt 0.545455 0.314921
    vt 0.000000 0.314921
    vt 0.272728 0.472382
    vt 0.090910 0.472382
    vt 0.818182 0.472382
    vt 0.636364 0.472382
    vt 0.454546 0.472382
    s 0
    f 1/1/1 2/2/1 3/3/1
    f 2/2/2 1/4/2 6/5/2
    f 1/6/3 3/7/3 4/8/3
    f 1/9/4 4/8/4 5/10/4
    f 1/11/5 5/10/5 6/5/5
    f 2/2/6 6/5/6 11/12/6
    f 3/3/7 2/2/7 7/13/7
    f 4/8/8 3/7/8 8/14/8
    f 5/10/9 4/8/9 9/15/9
    f 6/5/10 5/10/10 10/16/10
    f 2/2/11 11/12/11 7/13/11
    f 3/3/12 7/13/12 8/17/12
    f 4/8/13 8/14/13 9/15/13
    f 5/10/14 9/15/14 10/16/14
    f 6/5/15 10/16/15 11/12/15
    f 7/13/16 11/12/16 12/18/16
    f 8/17/17 7/13/17 12/19/17
    f 9/15/18 8/14/18 12/20/18
    f 10/16/19 9/15/19 12/21/19
    f 11/12/20 10/16/20 12/22/20`);

    HazyMaze.meshes.torus = HazyMaze.parseOBJ(`# Blender 4.5.2 LTS
    # www.blender.org
    mtllib torus.mtl
    o Torus
    v 0.312500 0.000000 0.000000
    v 0.218750 0.054127 -0.000000
    v 0.218750 -0.054127 0.000000
    v 0.220971 -0.000000 -0.220971
    v 0.154680 0.054127 -0.154680
    v 0.154680 -0.054127 -0.154680
    v 0.000000 -0.000000 -0.312500
    v 0.000000 0.054127 -0.218750
    v 0.000000 -0.054127 -0.218750
    v -0.220971 -0.000000 -0.220971
    v -0.154680 0.054127 -0.154680
    v -0.154680 -0.054127 -0.154680
    v -0.312500 0.000000 0.000000
    v -0.218750 0.054127 -0.000000
    v -0.218750 -0.054127 0.000000
    v -0.220971 0.000000 0.220971
    v -0.154680 0.054127 0.154680
    v -0.154680 -0.054127 0.154680
    v 0.000000 0.000000 0.312500
    v 0.000000 0.054127 0.218750
    v 0.000000 -0.054127 0.218750
    v 0.220971 0.000000 0.220971
    v 0.154680 0.054127 0.154680
    v 0.154680 -0.054127 0.154680
    vn 0.4896 0.8480 -0.2028
    vn -0.9239 -0.0000 0.3827
    vn 0.4896 -0.8480 -0.2028
    vn 0.2028 0.8480 -0.4896
    vn -0.3827 -0.0000 0.9239
    vn 0.2028 -0.8480 -0.4896
    vn -0.2028 0.8480 -0.4896
    vn 0.3827 -0.0000 0.9239
    vn -0.2028 -0.8480 -0.4896
    vn -0.4896 0.8480 -0.2028
    vn 0.9239 -0.0000 0.3827
    vn -0.4896 -0.8480 -0.2028
    vn -0.4896 0.8480 0.2028
    vn 0.9239 -0.0000 -0.3827
    vn -0.4896 -0.8480 0.2028
    vn -0.2028 0.8480 0.4896
    vn 0.3827 -0.0000 -0.9239
    vn -0.2028 -0.8480 0.4896
    vn 0.2028 0.8480 0.4896
    vn -0.3827 -0.0000 -0.9239
    vn 0.2028 -0.8480 0.4896
    vn 0.4896 0.8480 0.2028
    vn -0.9239 -0.0000 -0.3827
    vn 0.4896 -0.8480 0.2028
    vt 0.500000 0.666667
    vt 0.625000 1.000000
    vt 0.500000 1.000000
    vt 0.625000 0.000000
    vt 0.500000 0.333333
    vt 0.500000 0.000000
    vt 0.625000 0.333333
    vt 0.750000 0.666667
    vt 0.625000 0.666667
    vt 0.750000 0.000000
    vt 0.875000 1.000000
    vt 0.750000 1.000000
    vt 0.875000 0.000000
    vt 0.750000 0.333333
    vt 0.875000 0.333333
    vt 1.000000 0.666667
    vt 0.875000 0.666667
    vt 1.000000 0.000000
    vt 0.000000 0.666667
    vt 0.125000 1.000000
    vt 0.000000 1.000000
    vt 0.125000 0.000000
    vt 0.000000 0.333333
    vt 0.000000 0.000000
    vt 0.125000 0.333333
    vt 0.250000 0.666667
    vt 0.125000 0.666667
    vt 0.250000 0.000000
    vt 0.375000 1.000000
    vt 0.250000 1.000000
    vt 0.375000 0.000000
    vt 0.250000 0.333333
    vt 0.375000 0.333333
    vt 0.375000 0.666667
    vt 1.000000 1.000000
    vt 1.000000 0.333333
    s 1
    f 1/1/1 5/2/1 2/3/1
    f 5/4/2 3/5/2 2/6/2
    f 6/7/3 1/1/3 3/5/3
    f 7/8/4 5/2/4 4/9/4
    f 8/10/5 6/7/5 5/4/5
    f 6/7/6 7/8/6 4/9/6
    f 7/8/7 11/11/7 8/12/7
    f 11/13/8 9/14/8 8/10/8
    f 12/15/9 7/8/9 9/14/9
    f 13/16/10 11/11/10 10/17/10
    f 14/18/11 12/15/11 11/13/11
    f 12/15/12 13/16/12 10/17/12
    f 13/19/13 17/20/13 14/21/13
    f 17/22/14 15/23/14 14/24/14
    f 18/25/15 13/19/15 15/23/15
    f 19/26/16 17/20/16 16/27/16
    f 20/28/17 18/25/17 17/22/17
    f 18/25/18 19/26/18 16/27/18
    f 19/26/19 23/29/19 20/30/19
    f 23/31/20 21/32/20 20/28/20
    f 24/33/21 19/26/21 21/32/21
    f 1/1/22 23/29/22 22/34/22
    f 2/6/23 24/33/23 23/31/23
    f 24/33/24 1/1/24 22/34/24
    f 1/1/1 4/9/1 5/2/1
    f 5/4/2 6/7/2 3/5/2
    f 6/7/3 4/9/3 1/1/3
    f 7/8/4 8/12/4 5/2/4
    f 8/10/5 9/14/5 6/7/5
    f 6/7/6 9/14/6 7/8/6
    f 7/8/7 10/17/7 11/11/7
    f 11/13/8 12/15/8 9/14/8
    f 12/15/9 10/17/9 7/8/9
    f 13/16/10 14/35/10 11/11/10
    f 14/18/11 15/36/11 12/15/11
    f 12/15/12 15/36/12 13/16/12
    f 13/19/13 16/27/13 17/20/13
    f 17/22/14 18/25/14 15/23/14
    f 18/25/15 16/27/15 13/19/15
    f 19/26/16 20/30/16 17/20/16
    f 20/28/17 21/32/17 18/25/17
    f 18/25/18 21/32/18 19/26/18
    f 19/26/19 22/34/19 23/29/19
    f 23/31/20 24/33/20 21/32/20
    f 24/33/21 22/34/21 19/26/21
    f 1/1/22 2/3/22 23/29/22
    f 2/6/23 3/5/23 24/33/23
    f 24/33/24 3/5/24 1/1/24`);

    //Generate billboard mesh
    const json = {
        a_position: [],
        a_texcoord: [],
        a_color: [],
        a_normal: [],
    };

    HazyMaze.addQuad(json,
        -0.5, -0.5, 0, 0, 1,
        0.5, -0.5, 0, 1, 1,
        -0.5, 0.5, 0, 0, 0,
        0.5, 0.5, 0, 1, 0,

        0, 0, -1,
        1,1,1
    );

    json.a_color = new Float32Array(json.a_color);
    json.a_position = new Float32Array(json.a_position);
    json.a_texcoord = new Float32Array(json.a_texcoord);
    json.a_normal = new Float32Array(json.a_normal);

    HazyMaze.billboard = HazyMaze.daveShade.buffersFromJSON(json);
})();